{"ast":null,"code":"import { axios } from \"@/common/api.service.js\";\nexport default {\n  data() {\n    return {\n      imgData: null,\n      imgUrl: null\n    };\n  },\n  methods: {\n    uploadFile() {\n      this.imgData = this.$refs.file.files[0];\n      if (!this.imgData) {\n        return;\n      }\n    },\n    async onSubmit() {\n      const formData = new FormData();\n      formData.append(\"imageData\", this.imgData);\n      console.log(this.imgData);\n      try {\n        const endpoint = \"/api/v1/image/\";\n        const response = await axios.post(endpoint, formData, {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\"\n          }\n        });\n        this.imgUrl = `http://localhost:8000${response.data}`;\n        alert(\"Success!\");\n      } catch (error) {\n        console.log(error);\n        alert(error.response.data);\n      }\n      this.imgData = null;\n    }\n  }\n};","map":{"version":3,"names":["axios","data","imgData","imgUrl","methods","uploadFile","$refs","file","files","onSubmit","formData","FormData","append","console","log","endpoint","response","post","headers","alert","error"],"sources":["/Users/tsutsuitomoya/Documents/GitHub/BookShelves/frontend/src/components/RegisterImage.vue"],"sourcesContent":["<template>\n    <div>\n      <form @submit.prevent=\"onSubmit\">\n        <div>画像</div>\n        <div>\n          <input\n            type=\"file\"\n            name=\"\"\n            id=\"img-upload\"\n            ref=\"file\"\n            multiple=\"multiple\"\n            @change=\"uploadFile\"\n            @click=\"\n              (e) => {\n                e.target.value = '';\n              }\n            \"\n          />\n        </div>\n        <button>登録</button>\n      </form>\n      <!-- プレビュー表示 -->\n      <img :src=\"imgUrl\" />\n    </div>\n  </template>\n  \n  <script>\n  import { axios } from \"@/common/api.service.js\";\n  \n  export default {\n    data() {\n      return {\n        imgData: null,\n        imgUrl: null,\n      };\n    },\n    methods: {\n      uploadFile() {\n        this.imgData = this.$refs.file.files[0];\n        if (!this.imgData) {\n          return;\n        }\n      },\n      async onSubmit() {\n        const formData = new FormData();\n        formData.append(\"imageData\", this.imgData);\n        console.log(this.imgData);\n        try {\n          const endpoint = \"/api/v1/image/\";\n          const response = await axios.post(endpoint, formData, {\n            headers: {\n              \"Content-Type\": \"multipart/form-data\",\n            },\n          });\n          this.imgUrl = `http://localhost:8000${response.data}`;\n          alert(\"Success!\");\n        } catch (error) {\n          console.log(error);\n          alert(error.response.data);\n        }\n        this.imgData = null;\n      },\n    },\n  };\n  </script>\n  "],"mappings":"AA2BE,SAASA,KAAI,QAAS,yBAAyB;AAE/C,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE,IAAI;MACbC,MAAM,EAAE;IACV,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,UAAUA,CAAA,EAAG;MACX,IAAI,CAACH,OAAM,GAAI,IAAI,CAACI,KAAK,CAACC,IAAI,CAACC,KAAK,CAAC,CAAC,CAAC;MACvC,IAAI,CAAC,IAAI,CAACN,OAAO,EAAE;QACjB;MACF;IACF,CAAC;IACD,MAAMO,QAAQA,CAAA,EAAG;MACf,MAAMC,QAAO,GAAI,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,WAAW,EAAE,IAAI,CAACV,OAAO,CAAC;MAC1CW,OAAO,CAACC,GAAG,CAAC,IAAI,CAACZ,OAAO,CAAC;MACzB,IAAI;QACF,MAAMa,QAAO,GAAI,gBAAgB;QACjC,MAAMC,QAAO,GAAI,MAAMhB,KAAK,CAACiB,IAAI,CAACF,QAAQ,EAAEL,QAAQ,EAAE;UACpDQ,OAAO,EAAE;YACP,cAAc,EAAE;UAClB;QACF,CAAC,CAAC;QACF,IAAI,CAACf,MAAK,GAAK,wBAAuBa,QAAQ,CAACf,IAAK,EAAC;QACrDkB,KAAK,CAAC,UAAU,CAAC;MACnB,EAAE,OAAOC,KAAK,EAAE;QACdP,OAAO,CAACC,GAAG,CAACM,KAAK,CAAC;QAClBD,KAAK,CAACC,KAAK,CAACJ,QAAQ,CAACf,IAAI,CAAC;MAC5B;MACA,IAAI,CAACC,OAAM,GAAI,IAAI;IACrB;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}