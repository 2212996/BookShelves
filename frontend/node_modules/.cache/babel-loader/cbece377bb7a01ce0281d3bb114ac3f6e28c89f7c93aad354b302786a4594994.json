{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      headers: [{\n        title: 'ID',\n        key: 'id'\n      }, {\n        title: 'ISBN',\n        key: 'isbn'\n      }, {\n        title: 'Title',\n        key: 'title'\n      }, {\n        title: 'Author',\n        key: 'author'\n      }, {\n        title: 'Publisher',\n        key: 'publisher'\n      }, {\n        title: 'Action',\n        key: 'delete',\n        sotrable: false\n      }],\n      serverDatas: []\n    };\n  },\n  mounted() {\n    axios.get('/api/v2/bookdata/').then(res => {\n      //   this.serverDatas = res.data\n\n      const items = [];\n\n      // オブジェクトの値を配列として取得\n      // `values`は`[ data1のオブジェクト, data2のオブジェクト ]`という配列になっている\n      const values = Object.values(res.data);\n\n      // `forEach()`でひとつずつ処理していく\n      values.forEach(value => {\n        const item = {\n          id: value.id,\n          title: value.title,\n          author: value.author,\n          publisher: value.publisher,\n          isbn: value.isbn\n        };\n\n        // `items`の一番後ろに追加\n        items.push(item);\n      });\n\n      // コンポーネントのデータに代入\n      this.serverDatas = items;\n    }).catch(e => {\n      console.log(e);\n    }).finally(() => {\n      console.log(\"通信完了\");\n    });\n  },\n  name: 'ShowDataBase',\n  methods: {\n    // getArticles: async function()  {\n    //     const endpoint = \"/api/v2/bookdata/\";\n    //     this.response = await axios.get(endpoint);\n    //     this.serverDatas = this.response.data;\n    // },\n    async deleteItem(id) {\n      const endpoint = \"/api/v2/bookdata/\" + id;\n      await axios.delete(endpoint).then(() => {\n        this.getArticles();\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","data","headers","title","key","sotrable","serverDatas","mounted","get","then","res","items","values","Object","forEach","value","item","id","author","publisher","isbn","push","catch","e","console","log","finally","name","methods","deleteItem","endpoint","delete","getArticles","err"],"sources":["/Users/tsutsuitomoya/Documents/GitHub/BookShelves/BookShelves/frontend/src/components/testTwo.vue"],"sourcesContent":["<template>\n    <div class=\"area\">\n        <div class=\"contents\">\n            <div class=\"database-title\">データベース</div>\n            <div class=\"database-table\">\n                <v-container>\n                    <v-row>\n                        <v-col cols=\"10\">\n                            <v-data-table\n                            :headers=\"headers\"\n                            :items=\"serverDatas\"\n                            >\n                            <template v-slot:item=\"{item}\">\n                                <v-btn\n                                    small\n                                    color=\"error\"\n                                    @click=\"deleteItem(item.id)\"\n                                >\n                                    delete\n                                </v-btn>\n                            </template>\n                            </v-data-table>\n                        </v-col>\n                    </v-row>\n                </v-container>\n            </div>\n        </div>\n        {{ this.serverDatas[0] }}\n    </div>\n</template>\n<script>\nimport axios from 'axios'\n\nexport default {\n  data(){\n    return {\n      headers: [\n          { \n            title: 'ID', \n            key: 'id' \n          },\n          {\n            title: 'ISBN',\n            key: 'isbn',\n          },\n          { title: 'Title', \n            key: 'title' \n          },\n          { title: 'Author', \n            key: 'author' \n          },\n          { title: 'Publisher', \n            key: 'publisher' \n          },\n          { title: 'Action', \n            key: 'delete',\n            sotrable:false \n          },\n        ],\n        serverDatas:[\n\n        ]\n    }\n  },\n  mounted() {\n    axios.get('/api/v2/bookdata/')\n        .then( res => {\n        //   this.serverDatas = res.data\n\n          const items = [];\n\n\n// オブジェクトの値を配列として取得\n// `values`は`[ data1のオブジェクト, data2のオブジェクト ]`という配列になっている\nconst values = Object.values(res.data) \n\n// `forEach()`でひとつずつ処理していく\nvalues.forEach((value) => {\n  const item = {\n    id: value.id,\n    title: value.title,\n    author: value.author,\n    publisher: value.publisher,\n    isbn: value.isbn,\n  };\n\n  // `items`の一番後ろに追加\n  items.push(item)\n});\n\n// コンポーネントのデータに代入\nthis.serverDatas = items;\n\n        })\n        .catch( e => {\n          console.log(e)\n        })\n        .finally(()=>{\n          console.log(\"通信完了\")\n        })\n    },\n    name: 'ShowDataBase',\n    methods:{\n        // getArticles: async function()  {\n        //     const endpoint = \"/api/v2/bookdata/\";\n        //     this.response = await axios.get(endpoint);\n        //     this.serverDatas = this.response.data;\n        // },\n        async deleteItem(id){\n            const endpoint = \"/api/v2/bookdata/\"+id;\n            await axios.delete(endpoint)\n            .then(() => {\n                this.getArticles();\n            })\n            .catch((err) => {\n            console.log(err);\n            });\n        }\n    }\n}\n</script>\n\n<style>\n.area{\n  width: 100%;\n  background-color: #F4F5F7;\n  padding-bottom: 10vh;\n}\n.contents{\n  width: 85%;\n  margin:auto;\n}\n.database-title{\n  text-align: left;\n  font-weight: bold;\n  padding-top:30px;\n  padding-bottom:30px;\n  color:#4F5272;\n  font-size: 20px;\n}\n</style>"],"mappings":";AA+BA,OAAOA,KAAI,MAAO,OAAM;AAExB,eAAe;EACbC,IAAIA,CAAA,EAAE;IACJ,OAAO;MACLC,OAAO,EAAE,CACL;QACEC,KAAK,EAAE,IAAI;QACXC,GAAG,EAAE;MACP,CAAC,EACD;QACED,KAAK,EAAE,MAAM;QACbC,GAAG,EAAE;MACP,CAAC,EACD;QAAED,KAAK,EAAE,OAAO;QACdC,GAAG,EAAE;MACP,CAAC,EACD;QAAED,KAAK,EAAE,QAAQ;QACfC,GAAG,EAAE;MACP,CAAC,EACD;QAAED,KAAK,EAAE,WAAW;QAClBC,GAAG,EAAE;MACP,CAAC,EACD;QAAED,KAAK,EAAE,QAAQ;QACfC,GAAG,EAAE,QAAQ;QACbC,QAAQ,EAAC;MACX,CAAC,CACF;MACDC,WAAW,EAAC;IAGhB;EACF,CAAC;EACDC,OAAOA,CAAA,EAAG;IACRP,KAAK,CAACQ,GAAG,CAAC,mBAAmB,EACxBC,IAAI,CAAEC,GAAE,IAAK;MACd;;MAEE,MAAMC,KAAI,GAAI,EAAE;;MAG1B;MACA;MACA,MAAMC,MAAK,GAAIC,MAAM,CAACD,MAAM,CAACF,GAAG,CAACT,IAAI;;MAErC;MACAW,MAAM,CAACE,OAAO,CAAEC,KAAK,IAAK;QACxB,MAAMC,IAAG,GAAI;UACXC,EAAE,EAAEF,KAAK,CAACE,EAAE;UACZd,KAAK,EAAEY,KAAK,CAACZ,KAAK;UAClBe,MAAM,EAAEH,KAAK,CAACG,MAAM;UACpBC,SAAS,EAAEJ,KAAK,CAACI,SAAS;UAC1BC,IAAI,EAAEL,KAAK,CAACK;QACd,CAAC;;QAED;QACAT,KAAK,CAACU,IAAI,CAACL,IAAI;MACjB,CAAC,CAAC;;MAEF;MACA,IAAI,CAACV,WAAU,GAAIK,KAAK;IAEhB,CAAC,EACAW,KAAK,CAAEC,CAAA,IAAK;MACXC,OAAO,CAACC,GAAG,CAACF,CAAC;IACf,CAAC,EACAG,OAAO,CAAC,MAAI;MACXF,OAAO,CAACC,GAAG,CAAC,MAAM;IACpB,CAAC;EACL,CAAC;EACDE,IAAI,EAAE,cAAc;EACpBC,OAAO,EAAC;IACJ;IACA;IACA;IACA;IACA;IACA,MAAMC,UAAUA,CAACZ,EAAE,EAAC;MAChB,MAAMa,QAAO,GAAI,mBAAmB,GAACb,EAAE;MACvC,MAAMjB,KAAK,CAAC+B,MAAM,CAACD,QAAQ,EAC1BrB,IAAI,CAAC,MAAM;QACR,IAAI,CAACuB,WAAW,CAAC,CAAC;MACtB,CAAC,EACAV,KAAK,CAAEW,GAAG,IAAK;QAChBT,OAAO,CAACC,GAAG,CAACQ,GAAG,CAAC;MAChB,CAAC,CAAC;IACN;EACJ;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}