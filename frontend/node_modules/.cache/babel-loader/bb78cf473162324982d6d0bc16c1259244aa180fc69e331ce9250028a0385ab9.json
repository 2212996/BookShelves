{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      headers: [{\n        title: 'ID',\n        key: 'id'\n      }, {\n        title: 'ISBN',\n        key: 'isbn'\n      }, {\n        title: 'Title',\n        key: 'title'\n      }, {\n        title: 'Author',\n        key: 'author'\n      }, {\n        title: 'Publisher',\n        key: 'publisher'\n      }, {\n        title: 'Action',\n        key: 'delete',\n        sotrable: false\n      }],\n      serverDatas: [],\n      response: \"\"\n    };\n  },\n  mounted: function () {\n    this.getArticles();\n  },\n  //   mounted() {\n  //     await axios.get('/api/v2/bookdata/')\n  //         .then( res => {\n  //           this.serverDatas = res.data\n  //         })\n  //         .catch( e => {\n  //           console.log(e)\n  //         })\n  //         .finally(()=>{\n  //           console.log(\"通信完了\")\n  //         })\n  //     },\n  name: 'ShowDataBase',\n  methods: {\n    getArticles: async function () {\n      const endpoint = \"/api/v2/bookdata/\";\n      this.response = await axios.get(endpoint);\n    },\n    async deleteItem(id) {\n      const endpoint = \"/api/v2/bookdata/\" + id;\n      await axios.delete(endpoint).then(() => {\n        this.getArticles();\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","data","headers","title","key","sotrable","serverDatas","response","mounted","getArticles","name","methods","endpoint","get","deleteItem","id","delete","then","catch","err","console","log"],"sources":["/Users/tsutsuitomoya/Documents/GitHub/BookShelves/BookShelves/frontend/src/components/testTwo.vue"],"sourcesContent":["<template>\n    <div class=\"area\">\n        <div class=\"contents\">\n            <div class=\"database-title\">データベース</div>\n            <div class=\"database-table\">\n                <v-container>\n                    <v-row>\n                        <v-col cols=\"10\">\n                            <v-data-table\n                            :headers=\"headers\"\n                            :items=\"serverDatas\"\n                            >\n                            <template v-slot:item=\"{item}\">\n                                <v-btn\n                                    small\n                                    color=\"error\"\n                                    @click=\"deleteItem(item.id)\"\n                                >\n                                    delete\n                                </v-btn>\n                                </template>\n                            </v-data-table>\n                        </v-col>\n                    </v-row>\n                </v-container>\n            </div>\n        </div>\n        {{ this.serverDatas[0] }}\n    </div>\n</template>\n<script>\nimport axios from 'axios'\n\nexport default {\n  data(){\n    return {\n      headers: [\n          { \n            title: 'ID', \n            key: 'id' \n          },\n          {\n            title: 'ISBN',\n            key: 'isbn',\n          },\n          { title: 'Title', \n            key: 'title' \n          },\n          { title: 'Author', \n            key: 'author' \n          },\n          { title: 'Publisher', \n            key: 'publisher' \n          },\n          { title: 'Action', \n            key: 'delete',\n            sotrable:false \n          },\n        ],\n        serverDatas:[\n\n        ],\n        response:\"\"\n    }\n  },\n  mounted: function() {\n this.getArticles();\n},\n//   mounted() {\n//     await axios.get('/api/v2/bookdata/')\n//         .then( res => {\n//           this.serverDatas = res.data\n//         })\n//         .catch( e => {\n//           console.log(e)\n//         })\n//         .finally(()=>{\n//           console.log(\"通信完了\")\n//         })\n//     },\n    name: 'ShowDataBase',\n    methods:{\n        getArticles: async function()  {\n            const endpoint = \"/api/v2/bookdata/\";\n            this.response = await axios.get(endpoint);\n        },\n        async deleteItem(id){\n            const endpoint = \"/api/v2/bookdata/\"+id;\n            await axios.delete(endpoint)\n            .then(() => {\n                this.getArticles();\n            })\n            .catch((err) => {\n            console.log(err);\n            });\n        }\n    }\n}\n</script>\n\n<style>\n.area{\n  width: 100%;\n  background-color: #F4F5F7;\n  padding-bottom: 10vh;\n}\n.contents{\n  width: 85%;\n  margin:auto;\n}\n.database-title{\n  text-align: left;\n  font-weight: bold;\n  padding-top:30px;\n  padding-bottom:30px;\n  color:#4F5272;\n  font-size: 20px;\n}\n</style>"],"mappings":"AA+BA,OAAOA,KAAI,MAAO,OAAM;AAExB,eAAe;EACbC,IAAIA,CAAA,EAAE;IACJ,OAAO;MACLC,OAAO,EAAE,CACL;QACEC,KAAK,EAAE,IAAI;QACXC,GAAG,EAAE;MACP,CAAC,EACD;QACED,KAAK,EAAE,MAAM;QACbC,GAAG,EAAE;MACP,CAAC,EACD;QAAED,KAAK,EAAE,OAAO;QACdC,GAAG,EAAE;MACP,CAAC,EACD;QAAED,KAAK,EAAE,QAAQ;QACfC,GAAG,EAAE;MACP,CAAC,EACD;QAAED,KAAK,EAAE,WAAW;QAClBC,GAAG,EAAE;MACP,CAAC,EACD;QAAED,KAAK,EAAE,QAAQ;QACfC,GAAG,EAAE,QAAQ;QACbC,QAAQ,EAAC;MACX,CAAC,CACF;MACDC,WAAW,EAAC,EAEX;MACDC,QAAQ,EAAC;IACb;EACF,CAAC;EACDC,OAAO,EAAE,SAAAA,CAAA,EAAW;IACrB,IAAI,CAACC,WAAW,CAAC,CAAC;EACnB,CAAC;EACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACIC,IAAI,EAAE,cAAc;EACpBC,OAAO,EAAC;IACJF,WAAW,EAAE,eAAAA,CAAA,EAAkB;MAC3B,MAAMG,QAAO,GAAI,mBAAmB;MACpC,IAAI,CAACL,QAAO,GAAI,MAAMP,KAAK,CAACa,GAAG,CAACD,QAAQ,CAAC;IAC7C,CAAC;IACD,MAAME,UAAUA,CAACC,EAAE,EAAC;MAChB,MAAMH,QAAO,GAAI,mBAAmB,GAACG,EAAE;MACvC,MAAMf,KAAK,CAACgB,MAAM,CAACJ,QAAQ,EAC1BK,IAAI,CAAC,MAAM;QACR,IAAI,CAACR,WAAW,CAAC,CAAC;MACtB,CAAC,EACAS,KAAK,CAAEC,GAAG,IAAK;QAChBC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAChB,CAAC,CAAC;IACN;EACJ;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}