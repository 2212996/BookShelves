{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      headers: [{\n        text: 'ID',\n        value: 'id'\n      }, {\n        text: 'ISBN',\n        value: 'isbn'\n      }, {\n        text: 'Title',\n        value: 'title'\n      }, {\n        text: 'Author',\n        value: 'author'\n      }, {\n        text: 'Publisher',\n        value: 'publisher'\n      }, {\n        text: 'Action',\n        value: 'delete',\n        sotrable: false\n      }],\n      serverDatas: [{\n        id: 25,\n        isbn: 9784915512377,\n        title: \"ハリー・ポッターと賢者の石\",\n        author: \"J.K.ローリング\",\n        publisher: \"undefined\"\n      }, {\n        id: 26,\n        isbn: 9784785300012,\n        title: \"科学論文の書き方\",\n        author: \"田中義麿\",\n        publisher: \"undefined\"\n      }, {\n        id: 27,\n        isbn: 9784785300036,\n        \"title\": \"顕微鏡標本の作り方\",\n        \"author\": \"田中克己\",\n        \"publisher\": \"undefined\"\n      }],\n      test: \"\",\n      items: [],\n      testtt: \"\"\n    };\n  },\n  //   mounted() {\n  //     axios.get('/api/v2/bookdata/')\n  //         .then( res => {\n  //             this.serverDatas = res.data;\n  //             this.test = res.data[0].id;\n  //             this.testtt = toString.call(res.data[0]);\n  //             // this.serverDatas = JSON.parse(this.response);\n  //             // const jsonData = JSON.parse(res.data);\n\n  //             const items = [];\n  //             const values = res.data;\n  //             values.forEach((value) => {\n  //             const item = {\n  //                 id: value.id,\n  //             };\n  //             items.push(JSON.stringify(item))\n  //             });\n  //             this.items = items;\n  //         })\n  //         .catch( e => {\n  //           console.log(e)\n  //         })\n  //         .finally(()=>{\n  //           console.log(\"通信完了\")\n  //         })\n  //     },\n  name: 'ShowDataBase',\n  methods: {\n    // getArticles: async function()  {\n    //     const endpoint = \"/api/v2/bookdata/\";\n    //     this.response = await axios.get(endpoint);\n    //     this.serverDatas = this.response.data;\n    // },\n    async deleteItem(id) {\n      const endpoint = \"/api/v2/bookdata/\" + id;\n      await axios.delete(endpoint).then(() => {\n        this.getArticles();\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","data","headers","text","value","sotrable","serverDatas","id","isbn","title","author","publisher","test","items","testtt","name","methods","deleteItem","endpoint","delete","then","getArticles","catch","err","console","log"],"sources":["/Users/tsutsuitomoya/Documents/GitHub/BookShelves/BookShelves/frontend/src/components/testTwo.vue"],"sourcesContent":["<template>\n    <div class=\"area\">\n        <div class=\"contents\">\n            <div class=\"database-title\">データベース</div>\n            <div class=\"database-table\">\n                <v-container>\n                    <v-row>\n                        <v-col cols=\"10\">\n                            <v-data-table\n                            :headers=\"headers\"\n                            :items=\"serverDatas\"\n                            >\n                            <template v-slot:item=\"{item}\">\n                                <v-btn\n                                    small\n                                    color=\"error\"\n                                    @click=\"deleteItem(item.id)\"\n                                >\n                                    delete\n                                </v-btn>\n                            </template>\n                            </v-data-table>\n                        </v-col>\n                    </v-row>\n                </v-container>\n            </div>\n        </div>\n        {{ this.serverDatas[0] }}\n        <!-- {{ this.test }}\n        {{ this.testtt }}\n        {{ this.items[0] }} -->\n    </div>\n</template>\n<script>\nimport axios from 'axios'\n\nexport default {\n  data(){\n    return {\n      headers: [\n          { \n            text: 'ID', \n            value: 'id' \n          },\n          {\n            text: 'ISBN',\n            value: 'isbn',\n          },\n          { \n            text: 'Title', \n            value: 'title' \n          },\n          { \n            text: 'Author', \n            value: 'author' \n          },\n          { \n            text: 'Publisher', \n            value: 'publisher' \n          },\n          { \n            text: 'Action', \n            value: 'delete',\n            sotrable:false \n          },\n        ],\n        serverDatas:[\n    {\n        id: 25,\n        isbn: 9784915512377,\n        title: \"ハリー・ポッターと賢者の石\",\n        author: \"J.K.ローリング\",\n        publisher: \"undefined\"\n    },\n    {\n        id: 26,\n        isbn: 9784785300012,\n        title: \"科学論文の書き方\",\n        author: \"田中義麿\",\n        publisher: \"undefined\"\n    },\n    {\n        id: 27,\n        isbn: 9784785300036,\n        \"title\": \"顕微鏡標本の作り方\",\n        \"author\": \"田中克己\",\n        \"publisher\": \"undefined\"\n    }\n],\n        test:\"\",\n        items:[],\n        testtt:\"\"\n    }\n  },\n//   mounted() {\n//     axios.get('/api/v2/bookdata/')\n//         .then( res => {\n//             this.serverDatas = res.data;\n//             this.test = res.data[0].id;\n//             this.testtt = toString.call(res.data[0]);\n//             // this.serverDatas = JSON.parse(this.response);\n//             // const jsonData = JSON.parse(res.data);\n\n//             const items = [];\n//             const values = res.data;\n//             values.forEach((value) => {\n//             const item = {\n//                 id: value.id,\n//             };\n//             items.push(JSON.stringify(item))\n//             });\n//             this.items = items;\n//         })\n//         .catch( e => {\n//           console.log(e)\n//         })\n//         .finally(()=>{\n//           console.log(\"通信完了\")\n//         })\n//     },\n    name: 'ShowDataBase',\n    methods:{\n        // getArticles: async function()  {\n        //     const endpoint = \"/api/v2/bookdata/\";\n        //     this.response = await axios.get(endpoint);\n        //     this.serverDatas = this.response.data;\n        // },\n        async deleteItem(id){\n            const endpoint = \"/api/v2/bookdata/\"+id;\n            await axios.delete(endpoint)\n            .then(() => {\n                this.getArticles();\n            })\n            .catch((err) => {\n            console.log(err);\n            });\n        }\n    }\n}\n</script>\n\n<style>\n.area{\n  width: 100%;\n  background-color: #F4F5F7;\n  padding-bottom: 10vh;\n}\n.contents{\n  width: 85%;\n  margin:auto;\n}\n.database-title{\n  text-align: left;\n  font-weight: bold;\n  padding-top:30px;\n  padding-bottom:30px;\n  color:#4F5272;\n  font-size: 20px;\n}\n</style>"],"mappings":"AAkCA,OAAOA,KAAI,MAAO,OAAM;AAExB,eAAe;EACbC,IAAIA,CAAA,EAAE;IACJ,OAAO;MACLC,OAAO,EAAE,CACL;QACEC,IAAI,EAAE,IAAI;QACVC,KAAK,EAAE;MACT,CAAC,EACD;QACED,IAAI,EAAE,MAAM;QACZC,KAAK,EAAE;MACT,CAAC,EACD;QACED,IAAI,EAAE,OAAO;QACbC,KAAK,EAAE;MACT,CAAC,EACD;QACED,IAAI,EAAE,QAAQ;QACdC,KAAK,EAAE;MACT,CAAC,EACD;QACED,IAAI,EAAE,WAAW;QACjBC,KAAK,EAAE;MACT,CAAC,EACD;QACED,IAAI,EAAE,QAAQ;QACdC,KAAK,EAAE,QAAQ;QACfC,QAAQ,EAAC;MACX,CAAC,CACF;MACDC,WAAW,EAAC,CAChB;QACIC,EAAE,EAAE,EAAE;QACNC,IAAI,EAAE,aAAa;QACnBC,KAAK,EAAE,eAAe;QACtBC,MAAM,EAAE,WAAW;QACnBC,SAAS,EAAE;MACf,CAAC,EACD;QACIJ,EAAE,EAAE,EAAE;QACNC,IAAI,EAAE,aAAa;QACnBC,KAAK,EAAE,UAAU;QACjBC,MAAM,EAAE,MAAM;QACdC,SAAS,EAAE;MACf,CAAC,EACD;QACIJ,EAAE,EAAE,EAAE;QACNC,IAAI,EAAE,aAAa;QACnB,OAAO,EAAE,WAAW;QACpB,QAAQ,EAAE,MAAM;QAChB,WAAW,EAAE;MACjB,EACH;MACOI,IAAI,EAAC,EAAE;MACPC,KAAK,EAAC,EAAE;MACRC,MAAM,EAAC;IACX;EACF,CAAC;EACH;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACIC,IAAI,EAAE,cAAc;EACpBC,OAAO,EAAC;IACJ;IACA;IACA;IACA;IACA;IACA,MAAMC,UAAUA,CAACV,EAAE,EAAC;MAChB,MAAMW,QAAO,GAAI,mBAAmB,GAACX,EAAE;MACvC,MAAMP,KAAK,CAACmB,MAAM,CAACD,QAAQ,EAC1BE,IAAI,CAAC,MAAM;QACR,IAAI,CAACC,WAAW,CAAC,CAAC;MACtB,CAAC,EACAC,KAAK,CAAEC,GAAG,IAAK;QAChBC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAChB,CAAC,CAAC;IACN;EACJ;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}