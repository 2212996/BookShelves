{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, createTextVNode as _createTextVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-51110068\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"book-item\"\n};\nconst _hoisted_2 = {\n  class: \"book-item-table\"\n};\nconst _hoisted_3 = {\n  class: \"book-item-image\"\n};\nconst _hoisted_4 = [\"src\", \"alt\"];\nconst _hoisted_5 = [\"alt\"];\nconst _hoisted_6 = {\n  class: \"title\"\n};\nconst _hoisted_7 = {\n  class: \"inner\"\n};\nconst _hoisted_8 = {\n  class: \"author\"\n};\nconst _hoisted_9 = {\n  class: \"inner\"\n};\nconst _hoisted_10 = {\n  key: 0\n};\nconst _hoisted_11 = {\n  key: 1\n};\nconst _hoisted_12 = {\n  class: \"publisher\"\n};\nconst _hoisted_13 = {\n  class: \"inner\"\n};\nconst _hoisted_14 = {\n  class: \"submit-button\"\n};\nconst _hoisted_15 = {\n  class: \"inner\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [$options.volumeInfo.imageLinks ? (_openBlock(), _createElementBlock(\"img\", {\n    key: 0,\n    src: $options.volumeInfo.imageLinks.thumbnail,\n    alt: $options.volumeInfo.title,\n    height: \"100\"\n  }, null, 8 /* PROPS */, _hoisted_4)) : (_openBlock(), _createElementBlock(\"img\", {\n    key: 1,\n    src: \"https://islandpress.org/sites/default/files/400px%20x%20600px-r01BookNotPictured.jpg\",\n    alt: $options.volumeInfo.title,\n    height: \"100\"\n  }, null, 8 /* PROPS */, _hoisted_5))]), _createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"div\", _hoisted_7, _toDisplayString($options.volumeInfo.title), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"div\", _hoisted_9, [!$options.volumeInfo.authors ? (_openBlock(), _createElementBlock(\"span\", _hoisted_10, \"No authors to display\")) : (_openBlock(), _createElementBlock(\"span\", _hoisted_11, [_createTextVNode(\" By \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.volumeInfo.authors, (author, authorindex) => {\n    return _openBlock(), _createElementBlock(\"span\", {\n      key: authorindex\n    }, [_createElementVNode(\"em\", null, _toDisplayString(_ctx.index + 1 !== $options.volumeInfo.authors.length && authorindex + 1 !== $props.book.volumeInfo.authors.length - 1 ? author + ', ' : authorindex + 1 == $props.book.volumeInfo.authors.length && authorindex + 1 !== 1 ? ' and ' + author : author), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))]))])]), _createElementVNode(\"div\", _hoisted_12, [_createElementVNode(\"div\", _hoisted_13, _toDisplayString($options.volumeInfo.publisher), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_14, [_createElementVNode(\"div\", _hoisted_15, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = $event => $options.submitBookData()),\n    class: \"button\"\n  }, \"登録する\")])])]), _createCommentVNode(\" <a :href=\\\"volumeInfo.previewLink\\\" target=\\\"_blank\\\"> \"), _createCommentVNode(\" <p>{{ keyword }}</p> \"), _createCommentVNode(\" <h4>{{ volumeInfo.title }}</h4> \"), _createCommentVNode(\" <p class=\\\"author\\\">\\n            <span v-if=\\\"!volumeInfo.authors\\\">No authors to display</span>\\n            <span v-else>\\n            By\\n            <span v-for=\\\"(author, index) in volumeInfo.authors\\\" :key=\\\"index\\\">\\n                <em>\\n                {{\\n                index + 1 !== volumeInfo.authors.length && index + 1 !== book.volumeInfo.authors.length-1 ? author + ', ' : index + 1 == book.volumeInfo.authors.length && index+1 !== 1 ? ' and ' + author : author\\n                }}\\n                </em>\\n            </span>\\n            </span>\\n        </p> \"), _createCommentVNode(\" <p class=\\\"publisher\\\">{{ volumeInfo.publisher }}</p> \"), _createCommentVNode(\" </a> \"), _createCommentVNode(\" <button v-on:click=\\\"submitBookData()\\\" class=\\\"button\\\">登録する</button> \"), _createElementVNode(\"div\", null, _toDisplayString($data.testData), 1 /* TEXT */)]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","$options","volumeInfo","imageLinks","src","thumbnail","alt","title","height","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_toDisplayString","_hoisted_8","_hoisted_9","authors","_hoisted_10","_hoisted_11","_createTextVNode","_Fragment","_renderList","author","authorindex","_ctx","index","length","$props","book","_hoisted_12","_hoisted_13","publisher","_hoisted_14","_hoisted_15","onClick","_cache","$event","submitBookData","_createCommentVNode","$data","testData"],"sources":["/Users/tsutsuitomoya/Documents/GitHub/BookShelves/BookShelves/frontend/src/components/BookItem.vue"],"sourcesContent":["<template>\n    <div class=\"book-item\">\n        <div class=\"book-item-table\">\n            <div class=\"book-item-image\">\n                <template v-if=\"volumeInfo.imageLinks\">\n                    <img :src=\"volumeInfo.imageLinks.thumbnail\" :alt=\"volumeInfo.title\" height=\"100\">\n                </template>\n                <template v-else>\n                    <img\n                    src=\"https://islandpress.org/sites/default/files/400px%20x%20600px-r01BookNotPictured.jpg\"\n                    :alt=\"volumeInfo.title\"\n                    height=\"100\"\n                    >\n                </template>\n            </div>\n            <div class=\"title\">\n                <div class=\"inner\">\n                    {{ volumeInfo.title }}\n                </div>\n            </div>\n            <div class=\"author\">\n                <div class=\"inner\">\n                    <span v-if=\"!volumeInfo.authors\">No authors to display</span>\n                    <span v-else>\n                    By\n                        <span v-for=\"(author, authorindex) in volumeInfo.authors\" :key=\"authorindex\">\n                            <em>\n                            {{\n                            index + 1 !== volumeInfo.authors.length && authorindex + 1 !== book.volumeInfo.authors.length-1 ? author + ', ' : authorindex + 1 == book.volumeInfo.authors.length && authorindex+1 !== 1 ? ' and ' + author : author\n                            }}\n                            </em>\n                        </span>\n                    </span>\n                </div>\n            </div>\n            <div class=\"publisher\">\n                <div class=\"inner\">{{ volumeInfo.publisher }}</div>\n            </div>\n            <div class=\"submit-button\">\n                <div class=\"inner\">\n                    <button v-on:click=\"submitBookData()\" class=\"button\">登録する</button>\n                </div>\n            </div>\n        </div>\n        <!-- <a :href=\"volumeInfo.previewLink\" target=\"_blank\"> -->\n\n        <!-- <p>{{ keyword }}</p> -->\n\n        <!-- <h4>{{ volumeInfo.title }}</h4> -->\n\n        <!-- <p class=\"author\">\n            <span v-if=\"!volumeInfo.authors\">No authors to display</span>\n            <span v-else>\n            By\n            <span v-for=\"(author, index) in volumeInfo.authors\" :key=\"index\">\n                <em>\n                {{\n                index + 1 !== volumeInfo.authors.length && index + 1 !== book.volumeInfo.authors.length-1 ? author + ', ' : index + 1 == book.volumeInfo.authors.length && index+1 !== 1 ? ' and ' + author : author\n                }}\n                </em>\n            </span>\n            </span>\n        </p> -->\n\n        <!-- <p class=\"publisher\">{{ volumeInfo.publisher }}</p> -->\n\n        <!-- </a> -->\n\n        <!-- <button v-on:click=\"submitBookData()\" class=\"button\">登録する</button> -->\n        <div>{{ testData }}</div>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios'\n\nexport default {\ndata(){\n    return {\n        testData: \"\",\n    }\n},\nprops: {\n    book: {\n        type: Object,\n        required: true\n    },\n    keyword: {\n        type: String\n    }\n},\ncomputed: {\n    volumeInfo(){\n    return this.book.volumeInfo;\n    }\n},\nmethods: {\n    async submitBookData(){\n        // this.testData = this.book.volumeInfo.title;\n        const formData = new FormData();\n        formData.append(\"ISBN\", this.keyword);\n        formData.append(\"Title\", this.book.volumeInfo.title);\n        formData.append(\"Author\", this.book.volumeInfo.authors[0]);\n        formData.append(\"Publisher\", this.book.volumeInfo.published);\n        console.log(this.keyword);\n        try {\n            const endpoint = \"/api/v2/bookdata/\";\n            await axios.post(endpoint, formData, {\n            headers: {\n                \"Content-Type\": \"multipart/form-data\",\n            },\n            });\n            alert(\"Success!\");\n        } catch (error) {\n            console.log(error);\n            alert(\"No!\");\n        }\n    }\n}\n}\n</script>\n\n<style scoped>\n.book-item{\n    margin-bottom: 5px;\n    background-color: #FFF;\n    height:125px;\n}\n.book-item-table{\n    display: flex;\n    vertical-align: middle;\n    height:125px;\n}\n.book-item-image{\n    width:10%;\n    height: 100%;\n    padding-top:12.5px;\n    padding-bottom:12.5px;\n}\n.title{\n    width:27.5%;\n    height: 100%;\n    /* background-color: aqua; */\n    display: table;\n}\n.inner{\n    display: table-cell;\n    vertical-align: middle;\n}\n.authoer{\n    width:25%;\n    height: 100%;\n}\n.publisher{\n    width:25%;\n    height: 100%;\n}\n.submit-button{\n    width:10%;\n    height: 100%;\n}\n/* ul {\npadding: 0;\n}\n\nul li {\ndisplay: inline-block;\n}\n\nul li:first-child {\nlist-style: none;\n}\n.author {\nfont-size: 14px;\n}\n\n.button {\n  border: 0;\n  padding: 0 10px;\n  margin: 0;\n  background: #B22D35;\n  color: white;\n  box-shadow: 0 0 0 transparent;\n\n  height: 30px;\n  vertical-align: top;\n} */\n</style>\n"],"mappings":";;;EACSA,KAAK,EAAC;AAAW;;EACbA,KAAK,EAAC;AAAiB;;EACnBA,KAAK,EAAC;AAAiB;mBAHxC;mBAAA;;EAeiBA,KAAK,EAAC;AAAO;;EACTA,KAAK,EAAC;AAAO;;EAIjBA,KAAK,EAAC;AAAQ;;EACVA,KAAK,EAAC;AAAO;;EArBlCC,GAAA;AAAA;;EAAAA,GAAA;AAAA;;EAmCiBD,KAAK,EAAC;AAAW;;EACbA,KAAK,EAAC;AAAO;;EAEjBA,KAAK,EAAC;AAAe;;EACjBA,KAAK,EAAC;AAAO;;uBAtC9BE,mBAAA,CAqEM,OArENC,UAqEM,GApEFC,mBAAA,CAyCM,OAzCNC,UAyCM,GAxCFD,mBAAA,CAWM,OAXNE,UAWM,GAVcC,QAAA,CAAAC,UAAU,CAACC,UAAU,I,cACjCP,mBAAA,CAAiF;IALrGD,GAAA;IAK0BS,GAAG,EAAEH,QAAA,CAAAC,UAAU,CAACC,UAAU,CAACE,SAAS;IAAGC,GAAG,EAAEL,QAAA,CAAAC,UAAU,CAACK,KAAK;IAAEC,MAAM,EAAC;0BAL/FC,UAAA,M,cAQoBb,mBAAA,CAIC;IAZrBD,GAAA;IASoBS,GAAG,EAAC,sFAAsF;IACzFE,GAAG,EAAEL,QAAA,CAAAC,UAAU,CAACK,KAAK;IACtBC,MAAM,EAAC;0BAX3BE,UAAA,G,GAeYZ,mBAAA,CAIM,OAJNa,UAIM,GAHFb,mBAAA,CAEM,OAFNc,UAEM,EAAAC,gBAAA,CADCZ,QAAA,CAAAC,UAAU,CAACK,KAAK,iB,GAG3BT,mBAAA,CAcM,OAdNgB,UAcM,GAbFhB,mBAAA,CAYM,OAZNiB,UAYM,G,CAXWd,QAAA,CAAAC,UAAU,CAACc,OAAO,I,cAA/BpB,mBAAA,CAA6D,QAtBjFqB,WAAA,EAsBqD,uBAAqB,M,cACtDrB,mBAAA,CASO,QAhC3BsB,WAAA,GAAAC,gBAAA,CAuBiC,MAET,I,kBAAAvB,mBAAA,CAMOwB,SAAA,QA/B/BC,WAAA,CAyB8DpB,QAAA,CAAAC,UAAU,CAACc,OAAO,EAzBhF,CAyBsCM,MAAM,EAAEC,WAAW;yBAAjC3B,mBAAA,CAMO;MANoDD,GAAG,EAAE4B;IAAW,IACvEzB,mBAAA,CAIK,YAAAe,gBAAA,CAFLW,IAAA,CAAAC,KAAK,SAASxB,QAAA,CAAAC,UAAU,CAACc,OAAO,CAACU,MAAM,IAAIH,WAAW,SAASI,MAAA,CAAAC,IAAI,CAAC1B,UAAU,CAACc,OAAO,CAACU,MAAM,OAAKJ,MAAM,UAAUC,WAAW,QAAQI,MAAA,CAAAC,IAAI,CAAC1B,UAAU,CAACc,OAAO,CAACU,MAAM,IAAIH,WAAW,uBAAqBD,MAAM,GAAGA,MAAM,iB;yCAOtOxB,mBAAA,CAEM,OAFN+B,WAEM,GADF/B,mBAAA,CAAmD,OAAnDgC,WAAmD,EAAAjB,gBAAA,CAA7BZ,QAAA,CAAAC,UAAU,CAAC6B,SAAS,iB,GAE9CjC,mBAAA,CAIM,OAJNkC,WAIM,GAHFlC,mBAAA,CAEM,OAFNmC,WAEM,GADFnC,mBAAA,CAAkE;IAArDoC,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEnC,QAAA,CAAAoC,cAAc;IAAI3C,KAAK,EAAC;KAAS,MAAI,E,OAIrE4C,mBAAA,4DAA2D,EAE3DA,mBAAA,0BAA6B,EAE7BA,mBAAA,qCAAwC,EAExCA,mBAAA,wkBAYQ,EAERA,mBAAA,2DAA4D,EAE5DA,mBAAA,UAAa,EAEbA,mBAAA,4EAA2E,EAC3ExC,mBAAA,CAAyB,aAAAe,gBAAA,CAAjB0B,KAAA,CAAAC,QAAQ,iB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}