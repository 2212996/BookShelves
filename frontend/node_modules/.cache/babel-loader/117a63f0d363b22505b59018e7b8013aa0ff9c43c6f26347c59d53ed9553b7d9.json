{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.response.data, (data, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index\n    });\n  }), 128 /* KEYED_FRAGMENT */))]), _createTextVNode(\" \" + _toDisplayString($data.response), 1 /* TEXT */)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementBlock","_Fragment","_createElementVNode","_renderList","$data","response","data","index","key","_createTextVNode","_toDisplayString"],"sources":["/Users/tsutsuitomoya/Documents/GitHub/BookShelves/BookShelves/frontend/src/components/ShowDataBase.vue"],"sourcesContent":["<template>\n<div>\n    <div  v-for=\"(data, index) in response.data\" :key=\"index\">\n    </div>\n</div>\n{{ response }}\n</template>\n\n<script>\nimport axios from 'axios'\n\nexport default {\n    data(){\n        return {\n            response: \"\",\n        }\n    },\nmounted: function() {\n this.getArticles();\n},\n    name: 'ShowDataBase',\n    methods:{\n        getArticles: async function()  {\n            const endpoint = \"/api/v2/bookdata/\";\n            this.response = await axios.get(endpoint);\n        },\n    }\n    }\n</script>"],"mappings":";;uBAAAA,mBAAA,CAAAC,SAAA,SACAC,mBAAA,CAGM,e,kBAFFF,mBAAA,CACMC,SAAA,QAHVE,WAAA,CAEkCC,KAAA,CAAAC,QAAQ,CAACC,IAAI,EAF/C,CAEkBA,IAAI,EAAEC,KAAK;yBAAzBP,mBAAA,CACM;MADwCQ,GAAG,EAAED;IAAK;oCAF5DE,gBAAA,CAIM,GACN,GAAAC,gBAAA,CAAGN,KAAA,CAAAC,QAAQ,iB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}