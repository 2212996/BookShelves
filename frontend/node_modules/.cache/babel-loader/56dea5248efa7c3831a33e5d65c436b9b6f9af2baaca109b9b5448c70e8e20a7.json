{"ast":null,"code":"import { vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  id: \"search-form\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"div\", {\n  id: \"result\"\n}, null, -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"form\", _hoisted_1, [_withDirectives(_createElementVNode(\"input\", {\n    class: \"form-text\",\n    type: \"text\",\n    id: \"isbn\",\n    placeholder: \"ISBNコードを入力\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.isbn = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.isbn]]), _createElementVNode(\"button\", {\n    type: \"button\",\n    onClick: _cache[1] || (_cache[1] = $event => $options.search())\n  }, \"検索\")]), _hoisted_2]);\n}","map":{"version":3,"names":["id","_createElementVNode","_createElementBlock","_hoisted_1","class","type","placeholder","_cache","$event","$data","isbn","onClick","$options","search","_hoisted_2"],"sources":["/Users/tsutsuitomoya/Documents/GitHub/BookShelves/BookShelves/frontend/src/components/SearchBookFromISBN.vue"],"sourcesContent":["<template>\n  <div>\n    <form id=\"search-form\">\n        <input class=\"form-text\" type=\"text\" id=\"isbn\" placeholder=\"ISBNコードを入力\" v-model=\"isbn\">\n        <button type=\"button\" v-on:click=\"search()\">検索</button>\n    </form>\n    <div id=\"result\"></div>\n  </div>\n</template>\n<script>\n// import { axios } from \"@/common/api.service.js\";\n\nexport default {\n  data() {\n    return {\n      isbn: '',\n    };\n  },\n  methods: {\n    search() {\n        const code = document.getElementById('isbn').value;\n\n        fetch(`https://www.googleapis.com/books/v1/volumes?q=isbn:${code}`)\n            .then(response => {\n                return response.json();\n            }).then(data => {\n                const bookTitle = data.items[0].volumeInfo.title;\n                $('#result').append(bookTitle);\n            }).catch(function(error) {\n                $('#result').append(error);\n            });\n    }\n  }\n};\n</script>"],"mappings":";;EAEUA,EAAE,EAAC;AAAa;gCAItBC,mBAAA,CAAuB;EAAlBD,EAAE,EAAC;AAAQ;;uBALlBE,mBAAA,CAMM,cALJD,mBAAA,CAGO,QAHPE,UAGO,G,gBAFHF,mBAAA,CAAuF;IAAhFG,KAAK,EAAC,WAAW;IAACC,IAAI,EAAC,MAAM;IAACL,EAAE,EAAC,MAAM;IAACM,WAAW,EAAC,YAAY;IAH/E,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAGyFC,KAAA,CAAAC,IAAI,GAAAF,MAAA;iDAAJC,KAAA,CAAAC,IAAI,E,GACrFT,mBAAA,CAAuD;IAA/CI,IAAI,EAAC,QAAQ;IAAMM,OAAK,EAAAJ,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEI,QAAA,CAAAC,MAAM;KAAI,IAAE,E,GAElDC,UAAuB,C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}