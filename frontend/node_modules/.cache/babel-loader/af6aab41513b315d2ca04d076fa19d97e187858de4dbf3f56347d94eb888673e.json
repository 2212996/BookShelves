{"ast":null,"code":"import { createElementVNode as _createElementVNode, withModifiers as _withModifiers, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"div\", null, \"画像\", -1 /* HOISTED */);\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"button\", null, \"登録\", -1 /* HOISTED */);\nconst _hoisted_3 = [\"src\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"form\", {\n    onSubmit: _cache[2] || (_cache[2] = _withModifiers((...args) => $options.onSubmit && $options.onSubmit(...args), [\"prevent\"]))\n  }, [_hoisted_1, _createElementVNode(\"div\", null, [_createElementVNode(\"input\", {\n    type: \"file\",\n    name: \"\",\n    id: \"img-upload\",\n    ref: \"file\",\n    multiple: \"multiple\",\n    onChange: _cache[0] || (_cache[0] = (...args) => $options.uploadFile && $options.uploadFile(...args)),\n    onClick: _cache[1] || (_cache[1] = e => {\n      e.target.value = '';\n    })\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */)]), _hoisted_2], 32 /* NEED_HYDRATION */), _createCommentVNode(\" プレビュー表示 \"), _createElementVNode(\"img\", {\n    src: $data.imgUrl\n  }, null, 8 /* PROPS */, _hoisted_3)]);\n}","map":{"version":3,"names":["_createElementVNode","_createElementBlock","onSubmit","_cache","_withModifiers","args","$options","_hoisted_1","type","name","id","ref","multiple","onChange","uploadFile","onClick","e","target","value","_hoisted_2","_createCommentVNode","src","$data","imgUrl","_hoisted_3"],"sources":["/Users/tsutsuitomoya/Documents/GitHub/BookShelves/frontend/src/components/RegisterImage.vue"],"sourcesContent":["<template>\n    <div>\n      <form @submit.prevent=\"onSubmit\">\n        <div>画像</div>\n        <div>\n          <input\n            type=\"file\"\n            name=\"\"\n            id=\"img-upload\"\n            ref=\"file\"\n            multiple=\"multiple\"\n            @change=\"uploadFile\"\n            @click=\"\n              (e) => {\n                e.target.value = '';\n              }\n            \"\n          />\n        </div>\n        <button>登録</button>\n      </form>\n      <!-- プレビュー表示 -->\n      <img :src=\"imgUrl\" />\n    </div>\n  </template>\n  \n  <script>\n  import { axios } from \"./common/api.service.js\";\n  \n  export default {\n    data() {\n      return {\n        imgData: null,\n        imgUrl: null,\n      };\n    },\n    methods: {\n      uploadFile() {\n        this.imgData = this.$refs.file.files[0];\n        if (!this.imgData) {\n          return;\n        }\n      },\n      async onSubmit() {\n        const formData = new FormData();\n        formData.append(\"imageData\", this.imgData);\n        console.log(this.imgData);\n        try {\n          const endpoint = \"/api/v1/image/\";\n          const response = await axios.post(endpoint, formData, {\n            headers: {\n              \"Content-Type\": \"multipart/form-data\",\n            },\n          });\n          this.imgUrl = `http://localhost:8000${response.data}`;\n          alert(\"Success!\");\n        } catch (error) {\n          console.log(error);\n          alert(error.response.data);\n        }\n        this.imgData = null;\n      },\n    },\n  };\n  </script>\n  "],"mappings":";gCAGQA,mBAAA,CAAa,aAAR,IAAE;gCAgBPA,mBAAA,CAAmB,gBAAX,IAAE;mBAnBlB;;uBACIC,mBAAA,CAsBM,cArBJD,mBAAA,CAkBO;IAlBAE,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAFnBC,cAAA,KAAAC,IAAA,KAE6BC,QAAA,CAAAJ,QAAA,IAAAI,QAAA,CAAAJ,QAAA,IAAAG,IAAA,CAAQ;MAC7BE,UAAa,EACbP,mBAAA,CAcM,cAbJA,mBAAA,CAYE;IAXAQ,IAAI,EAAC,MAAM;IACXC,IAAI,EAAC,EAAE;IACPC,EAAE,EAAC,YAAY;IACfC,GAAG,EAAC,MAAM;IACVC,QAAQ,EAAC,UAAU;IAClBC,QAAM,EAAAV,MAAA,QAAAA,MAAA,UAAAE,IAAA,KAAEC,QAAA,CAAAQ,UAAA,IAAAR,QAAA,CAAAQ,UAAA,IAAAT,IAAA,CAAU;IAClBU,OAAK,EAAAZ,MAAA,QAAAA,MAAA,MAAkBa,CAAC;MAAuBA,CAAC,CAACC,MAAM,CAACC,KAAK;;oDAOlEC,UAAmB,C,4BAErBC,mBAAA,aAAgB,EAChBpB,mBAAA,CAAqB;IAAfqB,GAAG,EAAEC,KAAA,CAAAC;EAAM,wBAtBvBC,UAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}